from libavutil_version import AV_VERSION_INT, AV_VERSION

when defined(windows):
  {.push importc, dynlib: "avfilter(|-5|-6|-7|-8).dll", cdecl.}
elif defined(macosx):
  {.push importc, dynlib: "libavfilter(|.5|.6|.7|.8).dylib", cdecl.}
else:
  {.push importc, dynlib: "avfilter.so(|.5|.6|.7|.8)", cdecl.}

const
  LIBAVFILTER_VERSION_MAJOR* = 7
  LIBAVFILTER_VERSION_MINOR* = 85
  LIBAVFILTER_VERSION_MICRO* = 100
  LIBAVFILTER_VERSION_INT* = AV_VERSION_INT(LIBAVFILTER_VERSION_MAJOR, LIBAVFILTER_VERSION_MINOR, LIBAVFILTER_VERSION_MICRO)
  LIBAVFILTER_VERSION* = AV_VERSION(LIBAVFILTER_VERSION_MAJOR, LIBAVFILTER_VERSION_MINOR, LIBAVFILTER_VERSION_MICRO)
  LIBAVFILTER_BUILD* = LIBAVFILTER_VERSION_INT

#define LIBAVFILTER_IDENT       "Lavfi" AV_STRINGIFY(LIBAVFILTER_VERSION)

when not defined(FF_API_OLD_FILTER_OPTS_ERROR):
  const FF_API_OLD_FILTER_OPTS_ERROR* = LIBAVFILTER_VERSION_MAJOR < 8

when not defined(FF_API_LAVR_OPTS):
  const FF_API_LAVR_OPTS* = LIBAVFILTER_VERSION_MAJOR < 8

when not defined(FF_API_FILTER_GET_SET):
  const FF_API_FILTER_GET_SET* = LIBAVFILTER_VERSION_MAJOR < 8

when not defined(FF_API_SWS_PARAM_OPTION):
  const FF_API_SWS_PARAM_OPTION* = LIBAVFILTER_VERSION_MAJOR < 8

when not defined(FF_API_NEXT):
  const FF_API_NEXT* = LIBAVFILTER_VERSION_MAJOR < 8
